<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.robot.example</groupId>
  <artifactId>Apiai</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>Apiai Maven Webapp</name>
  <url>http://maven.apache.org</url>
    <!-- maven不同于传统的jar包注入,而是采用maven的配置,通过配置,将自动从maven的中心仓库下载相应的依赖 -->
  <!-- maven依赖包注入 -->
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
	<dependency>
		<groupId>javax.servlet.jsp</groupId>
		<artifactId>javax.servlet.jsp-api</artifactId>
		<version>2.2.1</version>
		<scope>provided</scope>
	</dependency>
	
	<!-- struts2核心包 -->
	<dependency>
	    <groupId>org.apache.struts</groupId>
	    <artifactId>struts2-core</artifactId>
	    <version>2.3.28</version>
	    <exclusions>
	    	<exclusion>
	    		<artifactId>javassist</artifactId>
	    		<groupId>javassist</groupId>
	    	</exclusion>
	    </exclusions>
	</dependency>
	
	<!-- spring依赖 -->
	<dependency>  
	    <groupId>org.springframework</groupId>  
	    <artifactId>spring-context-support</artifactId>  
	    <version>4.1.1.RELEASE</version>  
	</dependency> 
	 <dependency>  
	    <groupId>org.springframework</groupId>  
	    <artifactId>spring-webmvc</artifactId>  
	    <version>4.1.1.RELEASE</version>  
	</dependency> 
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>4.1.1.RELEASE</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>4.1.1.RELEASE</version>
	</dependency>
	
	<!-- hibernate依赖 -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>5.1.0.Final</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.1.3.Final</version>
	</dependency> 
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-dbcp2</artifactId>
		<version>2.0</version>
	</dependency>

		<!-- httpclient依赖 -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient-cache</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<!-- log4j依赖 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		
		<!-- gson依赖 -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.3.4</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>
  </dependencies>
   <properties>
   <!-- java1.6的环境,sae对jdk版本有要求 -->
  	<java.version>1.6</java.version>
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
  </properties>
  <build>
    <finalName>Apiai</finalName>

	<!-- 通过右击项目,run as: maven build ,然后输入jetty:run启动jetty部署 -->
    <plugins>
    	<plugin>
    		<groupId>org.mortbay.jetty</groupId>
    		<!-- jetty7.x和jetty6.x的明显不同在于这里,6.x的名字为maven-jetty-plugin -->
    		<artifactId>jetty-maven-plugin</artifactId>
    		<version>7.1.5.v20100705</version>
    		<configuration>
    		<!-- 自动热部署,每10秒扫描一下 -->
			  <scanIntervalSeconds>10</scanIntervalSeconds>
			  <!-- war生成目录 -->
			  <webApp>
			  	<!-- 生成的war名称 -->
			  	<warName>Apiai</warName>
			  </webApp>
			  <connectors>
			  	<!-- 6.x的为org.mortbay.jetty.SelectChannelConnector -->
			  	<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                        <!-- 设置默认的端口号 -->
                        <port>80</port>
                </connector>
			  </connectors>
			</configuration>
			<!-- 在package命令之后执行jetty的run命令 -->
			<executions>
				<execution>
					<phase>package</phase>
					<goals><goal>run</goal></goals>
				</execution>
			</executions>
    	</plugin>
    	
    </plugins>
  </build>
</project>
